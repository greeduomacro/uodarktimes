Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.Rook.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.Rook.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.Rook.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.Rook.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.Rook.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.Rook.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.Die(Boolean sound)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.Pawn.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheck()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.BaseChessPiece.MoveTo(Move move)
   at Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   at Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   at System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   at System.Delegate.DynamicInvokeImpl(Object[] args)
   at Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   at Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   at Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   at Server.Network.MessagePump.HandleReceive(NetState ns)
   at Server.Network.MessagePump.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   at Server.Network.Packet.Compile(Boolean compress, Int32& length)
   at Server.Network.NetState.Send(Packet p)
   at Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   at Arya.Chess.King.PlayCheckMate()
   at Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   at Arya.Chess.BChessboard.OnMoveOver(Move move)
   at Arya.Chess.BaseChessPiece.OnMoveOver()
   at Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   at Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   at Server.Mobile.Move(Direction d)
   at Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   at Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   at Server.Mobiles.BaseAI.DoMove(Direction d)
   at Server.Mobiles.BaseAI.DoActionWander()
   at Server.Mobiles.MeleeAI.DoActionWander()
   at Server.Mobiles.BaseAI.Think()
   at Server.Mobiles.BaseAI.AITimer.OnTick()
   at Server.Timer.Slice()
   at Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnPawnPromoted(BaseChessPiece pawn, PawnPromotion to)
   v Arya.Chess.PawnPromotionGump.OnResponse(NetState sender, RelayInfo info)
   v Server.Network.PacketHandlers.DisplayGumpResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheckMate()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.Rook.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheck()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.King.PlayCheckMate()
   v Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   v Arya.Chess.BChessboard.OnMoveOver(Move move)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.Pawn.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.Die(Boolean sound)
   v Arya.Chess.BaseChessPiece.OnMoveOver()
   v Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   v Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   v Server.Mobile.Move(Direction d)
   v Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   v Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   v Server.Mobiles.BaseAI.DoMove(Direction d)
   v Server.Mobiles.BaseAI.DoActionWander()
   v Server.Mobiles.MeleeAI.DoActionWander()
   v Server.Mobiles.BaseAI.Think()
   v Server.Mobiles.BaseAI.AITimer.OnTick()
   v Server.Timer.Slice()
   v Server.Core.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   v Server.Network.Packet.Compile(Boolean compress, Int32& length)
   v Server.Network.NetState.Send(Packet p)
   v Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   v Arya.Chess.BaseChessPiece.MoveTo(Move move)
   v Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   v Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   v System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner)
   v System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)
   v System.Delegate.DynamicInvokeImpl(Object[] args)
   v Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   v Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   v Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   v Server.Network.MessagePump.HandleReceive(NetState ns)
   v Server.Network.MessagePump.Slice()
   v Server.Core.Main(String[] args)

